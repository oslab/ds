//sorting

buble

#include <stdio.h>

void BubbleSort(int arr[],int size)
{
   int i,j,temp;
   for(i=0;i<size-1;i++) 
    {
    	for(j=0;j<size-i-1;j++) 
    	{
    		if(arr[j]>arr[j+1])
           {
           	temp=arr[j];
           	arr[j]=arr[j+1];
           	arr[j+1]=temp;
		   } 
		}    
	}                 
}
void display(int arr[],int size)
{
    int i;
    for (i=0;i<size;i++)
        printf("%d ", arr[i]);
    printf("\n");
}
void main()
{
    int arr[100],size,i;
    printf("Enter the size of array: ");
    scanf("%d",&size);
    printf("Enter the array elements: ");
    for(i=0;i<size;i++)
 	   scanf("%d",&arr[i]);
    BubbleSort(arr,size);
    printf("Sorted array: \n");
   	display(arr,size);
}

//quick

#include <stdlib.h>
#include <stdio.h>
void quicksort(int arr[25],int low,int high){
   int i, j, pivot, temp, val;
   if(low<high){
      pivot=low;
      //printf("Pivot = %d\n",pivot);
      i=low;
      j=high;
      while(i<j){
         while(arr[i]<=arr[pivot]&&i<high)
            i++;
         while(arr[j]>arr[pivot]&&j>low)
            j--;
         if(i<j){
            temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
         }
      }//while
      temp=arr[pivot]; 
      arr[pivot]=arr[j];
      arr[j]=temp;
      quicksort(arr,low,j-1);
      quicksort(arr,j+1,high);
   }//if
}

int main(){
   int i, count, arr[25];
   printf("Number of elements in the array: ");
   scanf("%d",&count);

   printf("Enter %d elements: ", count);
   for(i=0;i<count;i++)
      scanf("%d",&arr[i]);

   quicksort(arr,0,count-1);

   printf("Order of Sorted elements: ");
   for(i=0;i<count;i++)
      printf(" %d",arr[i]);

   return 0;
} 

//insersion

#include <stdio.h>
void display(int arr[], int size);
void InsertionSort(int arr[],int size)
{
   int i,j,temp;
   for(i=1;i<size;i++)
   {
   	temp=arr[i];
   	for(j=i-1;(j>=0) && temp<arr[j];j--)
   		arr[j+1]=arr[j];
	arr[j+1]=temp;
   }
   display(arr,size);
}
void display(int arr[],int size)
{
    int i;
    for (i=0;i<size;i++)
        printf("%d ", arr[i]);
    printf("\n");
}
void main()
{
    int arr[100],size,i;
    printf("Enter the size of array: ");
    scanf("%d",&size);
    printf("Enter the array elements: ");
    for(i=0;i<size;i++)
 	   scanf("%d",&arr[i]);
    InsertionSort(arr,size);
    printf("Sorted array: \n");
   	display(arr,size);
}


//merge

#include<stdlib.h>
#include<stdio.h>
void merge(int a[], int low, int mid, int high)
{
    int i,k,m,l,temp[50];
    l=low;
    i=low;
	m=mid+1;
	while((l<=mid)&&(m<=high)) 
	{
		if(a[l]<=a[m])
			temp[i++]=a[l++];
		else //a[l]>a[m]
			temp[i++]=a[m++];
	}
	while(l<=mid)
		temp[i++]=a[l++];
	while(m<=high)
		temp[i++]=a[m++];
	for(k=low;k<=high;k++)
		a[k]=temp[k];
}
void partition(int arr[], int low, int high)
{
    if (low < high)
    {
        int mid = (low+high)/2;
        partition(arr, low, mid);
        partition(arr, mid+1, high);
        merge(arr, low, mid, high);
    }
}
void printArray(int A[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", A[i]);
    printf("\n");
}
void main()
{
    int i,arr[20],n;
    printf("Enter the size of array: ");
    scanf("%d",&n);
    printf("Enter the array elements: ");
    for(i=0;i<n;i++)
 	   scanf("%d",&arr[i]);
    printf("Given array is \n");
    printArray(arr, n);
    partition(arr, 0, n-1);
    printf("\nSorted array is \n");
    printArray(arr, n);
}


//selection

#include <stdio.h>
void display(int arr[],int size);

void SelectionSort(int arr[], int n)
{
    int i,j,min,temp;
    for(i=0;i<n-1;i++)
    {
        min=i;
        for(j=i+1;j<n;j++)
          if(arr[j]<arr[min])
            min=j;
        printf("Min = %d\n",arr[min]);
        display(arr,n);
        temp=arr[min];
        arr[min]=arr[i];
        arr[i]=temp;
    }
}
void display(int arr[],int size)
{
    int i;
    for (i=0;i<size;i++)
        printf("%d ", arr[i]);
    printf("\n");
}
void main()
{
    int arr[100],size,i;
    printf("Enter the size of array: ");
    scanf("%d",&size);
    printf("Enter the array elements: ");
    for(i=0;i<size;i++)
 	   scanf("%d",&arr[i]);
    SelectionSort(arr,size);
    printf("Sorted array: \n");
   	display(arr,size);
}



search linear

#include <stdio.h>
int linearSearch(int arr[], int n, int x) 
{ 
	int i;
	for(i=0;i<n;i++)
		if (arr[i] == x)
			return i;
	return -1; 
} 
void main()
{
   	int arr[100],size,i,key;
    printf("Enter the size of array: ");
    scanf("%d",&size);
    printf("Enter the array elements: ");
    for(i=0;i<size;i++)
 	   scanf("%d",&arr[i]);
 	printf("Enter the key to search: ");
    scanf("%d",&key);
    int result = linearSearch(arr, size, key);
    (result == -1)? printf("Element is not present in array"): printf("Element is present at index %d", result);
}


//binary search

#include <stdio.h>
int binarySearch(int arr[], int l, int h, int x)
{
   if (l<=h)
   {
	       int mid = (l+h)/2;
        if (arr[mid] == x)  
					return mid;
        else if (arr[mid] > x) 
					return binarySearch(arr, l, mid-1, x);
		 		else
        	return binarySearch(arr, mid+1, h, x);
   }
   return -1;
}
 
void main()
{
   int arr[10],n,i,x;
   printf("Size:");
   scanf("%d",&n);
   printf("Elements:");
   for(i=0;i<n;i++)
   		scanf("%d",&arr[i]);
   printf("Search Key:");
   scanf("%d",&x);
   int result = binarySearch(arr, 0, n-1, x);
   (result == -1)? printf("Element is not present in array"): printf("Element is present at index %d", result);
}
/*
#include <stdio.h>
int binarySearch(int arr[], int l, int r, int x)
{
  while (l <= r)
  {
    int m = (l + r)/2;
    if (arr[m] == x) 
        return m;  
    if (arr[m] < x) 
        l = m + 1; 
    else
         r = m - 1; 
  }
  return -1; 
}
int main()
{
   int arr[] = {2, 3, 4, 10, 40};
   int n = sizeof(arr)/ sizeof(arr[0]);
   int x = 10;
   int result = binarySearch(arr, 0, n-1, x);
   (result == -1)? printf("Element is not present in array")
                 : printf("Element is present at index %d", result);
   return 0;
}
*/